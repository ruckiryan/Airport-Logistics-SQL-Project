/* scripts/create_tables.sql
   Build the Logplan database schema (tables + constraints).
   Data loading is handled separately in scripts/load_data.sql
*/


USE master;
GO

IF DB_ID('Logplan') IS NOT NULL
BEGIN
    ALTER DATABASE Logplan SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE Logplan;
END;
GO

CREATE DATABASE Logplan;
GO
USE Logplan;
GO

-- 0) Ensure the database exists, then use it
USE master;
IF DB_ID('Logplan') IS NULL
    CREATE DATABASE Logplan;
GO
USE Logplan;
GO

-- 1) Drop existing tables (child -> parent) so this file is re-runnable
IF OBJECT_ID('dbo.PE_DETAIL','U')          IS NOT NULL DROP TABLE dbo.PE_DETAIL;
IF OBJECT_ID('dbo.PS_DETAIL','U')          IS NOT NULL DROP TABLE dbo.PS_DETAIL;
IF OBJECT_ID('dbo.SERVICE_EQUIPMENT','U')  IS NOT NULL DROP TABLE dbo.SERVICE_EQUIPMENT;
IF OBJECT_ID('dbo.[SERVICE]','U')          IS NOT NULL DROP TABLE dbo.[SERVICE];
IF OBJECT_ID('dbo.EQUIPMENT','U')          IS NOT NULL DROP TABLE dbo.EQUIPMENT;
IF OBJECT_ID('dbo.PROJECT','U')            IS NOT NULL DROP TABLE dbo.PROJECT;
IF OBJECT_ID('dbo.AIRPORT','U')            IS NOT NULL DROP TABLE dbo.AIRPORT;
IF OBJECT_ID('dbo.EMPLOYEE','U')           IS NOT NULL DROP TABLE dbo.EMPLOYEE;
IF OBJECT_ID('dbo.CLIENT','U')             IS NOT NULL DROP TABLE dbo.CLIENT;
GO

/* 2) Tables
   Note: data types mirror your source; adjust as needed if you add constraints later.
*/

-- CLIENT
CREATE TABLE dbo.CLIENT (
    CLIENT_ID     INT            NOT NULL CONSTRAINT PK_CLIENT PRIMARY KEY,
    FIRST_NAME    NVARCHAR(50)   NULL,
    LAST_NAME     NVARCHAR(50)   NULL,
    EMAIL         NVARCHAR(100)  NULL,
    ADDRESS       NVARCHAR(100)  NULL,
    PHONE_NUMBER  NVARCHAR(20)   NULL,
    CITY          NVARCHAR(50)   NULL,
    STATE         NVARCHAR(50)   NULL,
    ZIP_CODE      NVARCHAR(10)   NULL
);

-- EMPLOYEE
CREATE TABLE dbo.EMPLOYEE (
    EMPLOYEE_ID       INT            NOT NULL CONSTRAINT PK_EMPLOYEE PRIMARY KEY,
    EMP_QUALIFICATION NVARCHAR(100)  NULL,
    EMP_FIRST_NAME    NVARCHAR(50)   NULL,
    EMP_LAST_NAME     NVARCHAR(50)   NULL,
    EMP_ADDRESS       NVARCHAR(100)  NULL,
    EMP_EMAIL         NVARCHAR(100)  NULL
);

-- AIRPORT
CREATE TABLE dbo.AIRPORT (
    AIRPORT_ID    INT            NOT NULL CONSTRAINT PK_AIRPORT PRIMARY KEY,
    AIRPORT_LEVEL NVARCHAR(20)   NULL,
    A_LONG        FLOAT          NULL,
    A_LAT         FLOAT          NULL,
    AIRPORT_CODE  NVARCHAR(10)   NULL,
    CONTINENT     NVARCHAR(10)   NULL
);

-- PROJECT
CREATE TABLE dbo.PROJECT (
    PROJECT_ID          INT            NOT NULL CONSTRAINT PK_PROJECT PRIMARY KEY,
    CLIENT_ID           INT            NOT NULL,
    AIRPORT_ID          INT            NOT NULL,
    PROJECT_BUDGET      FLOAT          NULL,
    PROJECT_STATUS      NVARCHAR(20)   NULL,
    PROJECT_DESCRIPTION NVARCHAR(MAX)  NULL,
    CONSTRAINT FK_PROJECT_CLIENT  FOREIGN KEY (CLIENT_ID)  REFERENCES dbo.CLIENT(CLIENT_ID),
    CONSTRAINT FK_PROJECT_AIRPORT FOREIGN KEY (AIRPORT_ID) REFERENCES dbo.AIRPORT(AIRPORT_ID)
);

-- EQUIPMENT
CREATE TABLE dbo.EQUIPMENT (
    EQUIPMENT_ID      INT            NOT NULL CONSTRAINT PK_EQUIPMENT PRIMARY KEY,
    EQUIPMENT_NAME    NVARCHAR(100)  NULL,
    EQUIPMENT_TYPE    NVARCHAR(50)   NULL,
    REPLACEMENT_VALUE FLOAT          NULL,
    INVENTORY         INT            NULL
);

-- SERVICE
CREATE TABLE dbo.[SERVICE] (
    SERVICE_ID          INT            NOT NULL CONSTRAINT PK_SERVICE PRIMARY KEY,
    SERVICE_LEVEL       NVARCHAR(50)   NULL,
    SERVICE_NAME        NVARCHAR(100)  NULL,
    SERVICE_COST        FLOAT          NULL,
    SERVICE_DESCRIPTION NVARCHAR(MAX)  NULL,
    EQUIPMENT_REQUIRED  NVARCHAR(50)   NULL,
    CONSTRAINT CK_SERVICE_EquipRequired
        CHECK (EQUIPMENT_REQUIRED IS NULL OR EQUIPMENT_REQUIRED IN (N'Yes', N'No'))
);

-- SERVICE_EQUIPMENT (junction between SERVICE and EQUIPMENT)
CREATE TABLE dbo.SERVICE_EQUIPMENT (
    SE_ID          INT  NOT NULL CONSTRAINT PK_SERVICE_EQUIPMENT PRIMARY KEY,
    SERVICE_ID     INT  NOT NULL,
    EQUIPMENT_ID   INT  NOT NULL,
    EquipmentAmount INT NULL,
    CONSTRAINT FK_SE_Service   FOREIGN KEY (SERVICE_ID)   REFERENCES dbo.[SERVICE](SERVICE_ID),
    CONSTRAINT FK_SE_Equipment FOREIGN KEY (EQUIPMENT_ID) REFERENCES dbo.EQUIPMENT(EQUIPMENT_ID)
);

-- PS_DETAIL (project ↔ service, with dates/qty)
CREATE TABLE dbo.PS_DETAIL (
    PS_DETAIL_ID  INT  NOT NULL CONSTRAINT PK_PS_DETAIL PRIMARY KEY,
    PROJECT_ID    INT  NOT NULL,
    SERVICE_ID    INT  NOT NULL,
    PS_START_DATE DATE NULL,
    PS_END_DATE   DATE NULL,
    QUANTITY      INT  NULL,
    CONSTRAINT FK_PS_Project FOREIGN KEY (PROJECT_ID) REFERENCES dbo.PROJECT(PROJECT_ID),
    CONSTRAINT FK_PS_Service FOREIGN KEY (SERVICE_ID) REFERENCES dbo.[SERVICE](SERVICE_ID)
);

-- PE_DETAIL (project ↔ employee, with hours/rate)
CREATE TABLE dbo.PE_DETAIL (
    PE_DETAIL_ID  INT   NOT NULL CONSTRAINT PK_PE_DETAIL PRIMARY KEY,
    PROJECT_ID    INT   NOT NULL,
    EMPLOYEE_ID   INT   NOT NULL,
    BILLABLE_RATE FLOAT NULL,
    HOUR_WORKED   FLOAT NULL,
    CONSTRAINT FK_PE_Project  FOREIGN KEY (PROJECT_ID)  REFERENCES dbo.PROJECT(PROJECT_ID),
    CONSTRAINT FK_PE_Employee FOREIGN KEY (EMPLOYEE_ID) REFERENCES dbo.EMPLOYEE(EMPLOYEE_ID)
);
GO

/* 3) Helpful indexes for FKs (improves join performance) */
CREATE INDEX IX_PROJECT_CLIENT   ON dbo.PROJECT(CLIENT_ID);
CREATE INDEX IX_PROJECT_AIRPORT  ON dbo.PROJECT(AIRPORT_ID);
CREATE INDEX IX_PS_DETAIL_PROJ   ON dbo.PS_DETAIL(PROJECT_ID);
CREATE INDEX IX_PS_DETAIL_SERV   ON dbo.PS_DETAIL(SERVICE_ID);
CREATE INDEX IX_PE_DETAIL_PROJ   ON dbo.PE_DETAIL(PROJECT_ID);
CREATE INDEX IX_PE_DETAIL_EMP    ON dbo.PE_DETAIL(EMPLOYEE_ID);
CREATE INDEX IX_SE_Service       ON dbo.SERVICE_EQUIPMENT(SERVICE_ID);
CREATE INDEX IX_SE_Equipment     ON dbo.SERVICE_EQUIPMENT(EQUIPMENT_ID);
GO

-- 4) Quick verification
SELECT name AS TableName, create_date
FROM sys.tables
ORDER BY name;
